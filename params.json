{"name":"Storeit","tagline":"Light package used to store entities to various storage.","body":"# StoreIt\r\n\r\nLight Java library used to store entities to various storage.\r\n\r\n## How to use!\r\n\r\nStoreIt provides an abstraction layer to store, get, list, update and delete all kind of entities.\r\n \r\nTo allow an entity to be stored into a StoreIt storage, it has to implement `StoredEntity` interface, to provides a \r\n`getId()` method.\r\n\r\n### Build with maven\r\n\r\nForm the root package, install StoredIt locally:\r\n\r\n```shell\r\nmvn install\r\n```\r\n\r\n### Add dependency in your project\r\n\r\nAdd dependency in your `pom.xml` according to the storage your want to use:\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.ingensi.data</groupId>\r\n    <artifactId>storeit-elasticsearch</artifactId>\r\n    <version>${storeit.version}</version>\r\n</dependency>\r\n```\r\n\r\n### Store your first entities\r\n\r\nTo store an entity with `StoreIt`, you need a `StoredEntity` class. Here is an example with a `User` class:\r\n\r\n```java\r\npublic class User implements StoredEntity {\r\n    private final String username;\r\n    private final String firstname;\r\n    private final String lastname;\r\n    \r\n    public User(String username, String firstname, String lastname) {\r\n        this.username = username;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n    }\r\n    \r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n    \r\n    public String getFirstname() {\r\n        return firstname;\r\n    }\r\n    \r\n    public String getLastname() {\r\n        return lastname;\r\n    }\r\n    \r\n    @Override\r\n    public String getId() {\r\n        return username;\r\n    }\r\n}\r\n\r\n```\r\n\r\nThen you are able to create, get, list, update or delete User into various storage by instantiating a `Storage<User>`:\r\n\r\n```java\r\nStorage<User> storage = new xxxStorage<>(\r\n    // DEPENDS ON THE STORAGE IMPLEMENTATION\r\n);\r\n\r\n// store new user\r\nstorage.store(new User(\"fbar\", \"foo\", \"bar\"));\r\n// list all users\r\nCollection<User> users = storage.list();\r\n// update user\r\nstorage.store(new User(\"fbar\", \"Jason\", \"Wilson\"));\r\n// get specific user\r\nUser bob = storage.get(\"bob\");\r\n// delete a user\r\nstorage.delete(\"fbar\");\r\n```\r\n\r\n## Structure and implementations\r\n\r\nEach implemented module contains its own specific documentation.\r\n\r\n## Implement your own `Storage`\r\n\r\nLook at existing implementations to learn how to implement your own `Storage`. Don't forget to contribute :)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}